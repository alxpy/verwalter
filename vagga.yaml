minimum-vagga: v0.5.0-120-g42de958

commands:

  make-js: !Command
    description: Make default javascripts
    container:  js
    work-dir: frontend
    run: [webpack]

  make: !Command
    description: Build binaries and frontend
    container: xenial
    run: [cargo, build]

  _static-verwalter_render-package: !Command
    description: Build static verwalter_render package (.tar.gz)
    container: rust-musl
    run: |
      [ -d dist ] || mkdir dist
      cargo build --target=x86_64-unknown-linux-musl
      tar -czf dist/verwalter-render-$(git describe).tar.gz \
        -C target/x86_64-unknown-linux-musl/debug verwalter_render

  test: !Command
    description: Run tests
    container: xenial
    run: [cargo, test]

  cargo: !Command
    description: Run any cargo command
    container: xenial
    run: [cargo]

  run: !Command
    description: "Run verwalter"
    prerequisites: [make]
    container: xenial
    environ:
      RUST_LOG: debug
    run:
    - ./target/debug/verwalter
    - --config-dir=/work/example-configs/pyapp
    - --log-dir=/tmp/logs
    - --storage-dir=tmp/storage
    - --override-machine-id=dead0beef1
    - --dry-run

  live: !Supervise
    description: "Run verwalter with live reload of web"
    prerequisites: [make]
    children:
      verw: !Command
        container: xenial
        environ:
          RUST_LOG: debug
        run:
        - ./target/debug/verwalter
        - --config-dir=/work/example-configs/pyapp
        - --storage-dir=tmp/storage
        - --log-dir=/tmp/logs
        - --override-machine-id=dead0beef1
      cantal: !Command
        container: xenial
        environ:
          RUST_LOG: warn
        run:
        - cantal-agent
        - --config-dir=/work/example-configs/cantal
        - --host=0.0.0.0
        - --override-machine-id=dead0beef1
      webpack: !Command
        container: js
        work-dir: frontend
        run:
        - webpack-dev-server
        - --hot
        - --progress

  doc: !Command
    description: Build docs
    container: docs
    work-dir: doc
    run: [make, html]

  webpack: !Command
    description: "Run webpack (compile javascripts)"
    container: js
    work-dir: frontend
    run:
    - webpack-dev-server
    - --hot
    - --progress
    - --colors

  trio: !Supervise
    description: Runs three verwalter/cantals so you can test leader election
    prerequisites: [make]
    children:
      n1: !Command
        container: xenial
        network: &n1
          ip: 172.23.0.1
          ports: {20001: 22682, 21001: 8379}
        run: |
          RUST_LOG=warn cantal-agent \
            --config-dir=/work/example-configs/cantal \
            --host=0.0.0.0 --override-machine-id=beef01 &
          RUST_LOG=debug ./target/debug/verwalter \
            --config-dir=example-configs/pyapp --storage-dir=tmp/storage \
            --log-dir=/tmp/logs \
            --dry-run \
            --host=0.0.0.0 --override-machine-id=beef01
      n2: !Command
        container: xenial
        network: &n2
          ip: 172.23.0.2
          ports: {20002: 22682, 21002: 8379}
        run: |
          RUST_LOG=warn cantal-agent \
            --config-dir=/work/example-configs/cantal \
            --host=0.0.0.0 --override-machine-id=beef02 &
          RUST_LOG=debug ./target/debug/verwalter \
            --config-dir=example-configs/pyapp --storage-dir=tmp/storage \
            --log-dir=/tmp/logs \
            --dry-run \
            --host=0.0.0.0 --override-machine-id=beef02
      n3: !Command
        container: xenial
        network: &n3
          ip: 172.23.0.3
          ports: {20003: 22682, 21003: 8379}
        run: |
          RUST_LOG=warn cantal-agent \
            --config-dir=/work/example-configs/cantal \
            --host=0.0.0.0 --override-machine-id=beef03 &
          RUST_LOG=debug ./target/debug/verwalter \
            --config-dir=example-configs/pyapp --storage-dir=tmp/storage \
            --log-dir=/tmp/logs \
            --dry-run \
            --host=0.0.0.0 --override-machine-id=beef03
      connector: !BridgeCommand
        container: xenial
        run: |
          sleep 2
          for i in $(seq 2 3); do
            wget http://172.23.0.1:22682/add_host.json -nv -O- \
              --method POST --body-data '{"addr": "172.23.0.'$i':22682"}'
          done
          sleep 100000

  _package-trusty: !Command
    container: trusty
    run: [make, ubuntu-packages, SYSTEM_KIND=upstart]

  _package-precise: !Command
    container: precise
    run: [make, ubuntu-packages, SYSTEM_KIND=upstart]

  _package-xenial: !Command
    container: xenial
    run: [make, ubuntu-packages, SYSTEM_KIND=systemd]

  _package-verwalter_render: !Command
    container: rust-musl
    run: [make, ubuntu-verwalter_render-package]

  packages: !Command
    container: xenial
    description: Build packages and repostories (mostly for CI)
    prerequisites: [_package-trusty, _package-precise, _package-xenial,
                    _package-verwalter_render]
    accepts_arguments: true
    run: |
      bulk repo-add --config bulk-render.yaml \
        --repository-base dist/repos \
        dist/verwalter-render-*.deb "$@"
      bulk repo-add --config bulk.yaml --repository-base dist/repos \
        dist/verwalter-[0-9]*.deb "$@"

containers:

  js:
    setup:
    - !Alpine v3.4
    - !NpmDependencies
      file: "frontend/package.json"
      optional: true
    environ:
      NODE_PATH: /usr/lib/node_modules

  xenial:
    setup:
    - !Ubuntu xenial
    - &pkgs !Install [build-essential, ca-certificates, git, lsb-release,
                      libreadline-dev, wget] # these two are for lua
    - &rust !TarInstall
      url: https://static.rust-lang.org/dist/rust-1.9.0-x86_64-unknown-linux-gnu.tar.gz
      script: "./install.sh --prefix=/usr --components=rustc,cargo \
               --components=rustc,rust-std-x86_64-unknown-linux-gnu,cargo"

    - !Download  # this is only for development
      url: https://github.com/tailhook/cantal/releases/download/v0.3.6/cantal_0.3.6-1_amd64.deb
      path: /tmp/cantal.deb
    - !Sh "dpkg -i /tmp/cantal.deb"

    - &bulk !Tar
      url: "http://files.zerogw.com/bulk/bulk-0.4.5.tar.gz"
      sha256: 8ee5a5f6386c1b408543a82bf22f184ddbc8add8e5eb6cb6b7e8492e5d4036e3
      path: /

    environ: &environ
      HOME: /work/target
      PATH: /bin:/usr/bin:/usr/local/bin:/work/target/debug

    volumes:
      /tmp: !Tmpfs
        size: 100Mi
        subdirs:
          logs:

  trusty:
    setup:
    - !Ubuntu trusty
    - *pkgs
    - *rust
    - *bulk
    environ: *environ

  precise:
    setup:
    - !Ubuntu precise
    - *pkgs
    - *rust
    - *bulk
    environ: *environ


  rust-musl:
    environ: &rustenv
      LD_LIBRARY_PATH: /musl/lib/rustlib/x86_64-unknown-linux-musl/lib
      CFLAGS: -I/usr/lib/include
      PATH: /musl/bin:/usr/local/bin:/usr/bin:/bin
      HOME: /work/target
    setup:
    - !Ubuntu xenial
    - !UbuntuUniverse
    - *pkgs
    - *rust
    - !Install [musl-tools, musl-dev]
    - !TarInstall
      url: "https://static.rust-lang.org/dist/rust-std-1.9.0-x86_64-unknown-linux-musl.tar.gz"
      script: "./install.sh --prefix=/musl \
               --components=rust-std-x86_64-unknown-linux-musl"
    - !Sh 'ln -s /musl/lib/rustlib/x86_64-unknown-linux-musl /usr/lib/rustlib/x86_64-unknown-linux-musl'
    - *bulk



  docs:
    setup:
    - !Alpine v3.3
    - !Install [py-sphinx, make, py-sphinx_rtd_theme]
    - !Py2Requirements doc/requirements.txt
