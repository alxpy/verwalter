import {entries, repr, pretty, is_string} from '../util/object'
import {@router, go} from '../util/routing'
import {refresher, json} from '../middleware/request'
import json_store from '../stores/json'
import pending_actions from '../stores/actions'
import {execute} from '../util/action'
import {set_port} from '../util/port'

style:
  .rotate
    animation-name: rotateThis
    animation-duration: .5s
    animation-iteration-count: infinite
    animation-timing-function: linear


view _leftmenu(config, schedule):
  <ul.nav.nav-pills.nav-stacked.col-lg-2>
    if schedule and schedule.data and schedule.data.role_metadata:
      for [name, _] of entries(config.roles) key name:
        let role = schedule.data.role_metadata[name]
        <li.active?(@router[1] == name) role="presentation">
          <a href=`/role/${name}`>
            link {click} go(event) -> @router
            name
            " "
            if role and role.badge:
              <span.badge>
                role.badge
    elif config:
      for [name, _] of entries(config.roles) key name:
        <li role="presentation">
          <a href=`/role/${name}`>
            name

view main(status):
  <div>
    store @config = json_store | refresher | json('/v1/config')
    store @schedule = json_store | refresher | json('/v1/schedule')
    _leftmenu(@config, @schedule)

    <div.col-lg-4>
      if (not @schedule or not @schedule.data or
          not @schedule.data.role_metadata):
        <div.panel.panel-default>
          <div.panel-body>
            "Loading..."
      elif @router[1]:
        let role_name = @router[1]
        let role = @schedule.data.role_metadata[role_name]
        <h1>
          role and role.title or @router[1]
        if role:
          <h2> "Status Info"
          <table.table>
            <thead>
              <tr>
                <th> "Property"
                <th> "Value"
            <tbody>
              for [name, value] of entries(role.info) key name:
                <tr>
                  <td>
                    name
                  <td>
                    value
          if status.scheduler_state.substr(0, 7) == 'leader:':
            <h2> "Available actions"
            <table.table>
              <thead>
                <tr>
                  <th> "Action"
                  <th> "Description"
              <tbody>
                store @actions = pending_actions | refresher
                  | json('/v1/pending_actions')
                for button of role.buttons or [] key repr(button.action):
                  <tr>
                    <td>
                      <button.btn.btn-default>
                        link {click} execute(
                          {"button": button.action}
                        ) -> @actions
                        button.title or button.id
                        for [id, act] of entries(@actions) key id:
                          if act.button.version == button.action.version:
                            " "
                            <span.glyphicon.glyphicon-refresh.rotate>
                    <td>
                      button.description or '(no description)'
          else:
            <div.panel.panel-warning>
              <div.panel-heading>
                "Actions are Only Available on Leader"
              if status.leader:
                <div.panel-body>
                  "Known addresses of a leader are:"
                  <ul>
                    <li>
                      <a href=`http://${status.leader.addr}/role/${role_name}`>
                        `http://${status.leader.addr}`
                    <li>
                      let url = set_port(status.leader.hostname,
                                          status.leader.addr)
                      <a href=url>
                        url
                    if status.leader.name != status.leader.hostname:
                      <li>
                        let url = set_port(status.leader.name,
                                           status.leader.addr)
                        <a href=url>
                          url
              else:
                <div.panel-body>
                  "The cluster is unstable, wait a little bit for leader
                   to come up"
        else:
          <div.panel.panel-warning>
            <div.panel-body>
              "No schedule for this role yet."
      else:
        <div.panel.panel-default>
          <div.panel-body>
            "Select role on the left"
